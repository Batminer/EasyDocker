version: '3'

networks:
  vpn:
    external: true

services:
  app:
    container_name: crater
    build:
      args:
        user: crater-user
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: crater-php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./:/var/www
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated
    networks:
      vpn:
         ipv4_address: 10.8.1.106

  db:
    image: mariadb
    restart: always
    volumes:
      #- db:/var/lib/mysql
      # If you want to persist data on the host, comment the line above this one...
      # and uncomment the line under this one.
      - ./docker-compose/db/data:/var/lib/mysql:rw,delegated
    environment:
      MYSQL_USER: crater
      MYSQL_PASSWORD: crater
      MYSQL_DATABASE: crater
      MYSQL_ROOT_PASSWORD: crater
    ports:
      - '33006:3306'
    networks:
      vpn:
         ipv4_address: 10.8.1.107

  nginx:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - 8066:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    #labels:
      #caddy: DOMAINSUBNAMEHERE
      #caddy.reverse_proxy: "IPADDRESSHERE:PORTHERE"
      #traefik.enable: true
      #traefik.http.routers.nginx.entrypoints: web,websecure
      #traefik.http.routers.nginx.rule: Host(`DOMAINSUBNAMEHERE`)
      #traefik.http.routers.nginx.tls: true
      #traefik.http.routers.nginx.tls.certresolver: production
    networks:
      vpn:
         ipv4_address: IPADDRESSHERE

  cron:
    build:
      context: ./
      dockerfile: ./docker-compose/cron.dockerfile
    volumes:
      - ./:/var/www
    networks:
      vpn:
         ipv4_address: 10.8.1.108